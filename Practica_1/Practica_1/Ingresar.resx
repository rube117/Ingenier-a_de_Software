<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>